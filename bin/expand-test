#!/usr/bin/env ruby
#
# Author:: Daniel DeLeo (<dan@opscode.com>)
# Author:: Seth Falcon (<seth@opscode.com>)
# Author:: Chris Walters (<cw@opscode.com>)
# Copyright:: Copyright (c) 2010-2011 Opscode, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "rubygems"

$:.unshift(File.dirname(__FILE__) + '/../lib/')

require 'chef/expander'
require 'chef/expander/solrizer'
require 'yajl'

class Chef::Expander::Solrizer
  def post_to_solr(document, &logger_block)
    open(NAMER.current, "w") do |fh|
      fh.puts(document)
    end
  end
end


class Namer
  attr_reader :current
  attr_writer :current
  def initialize
    @current = ""
  end
end

NAMER = Namer.new

ARGV.each do |input_json_dir|
  Dir["#{input_json_dir}/**.merged", "#{input_json_dir}/**/**.merged"].uniq.each do |input_json_file|
  NAMER.current = input_json_file + ".xml.ruby"
  payload = Yajl::Parser.parse(IO.read(input_json_file))
  object_cmd = {
    "action" => "add",
    "payload" => {
      "type" => "node",
      "id" => "beef123",
      "database" => "chef_db123",
      "item" => payload,
      "enqueued_at" => Time.now.to_f
    }
  }
  e = Chef::Expander::Solrizer.new(Yajl::Encoder.encode(object_cmd))
  e.run
  end
end
puts "ok"

